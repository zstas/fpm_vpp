// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qpb/qpb.proto

#include "qpb/qpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_qpb_2fqpb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qpb_2fqpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ipv4Address;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qpb_2fqpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ipv6Address;
}  // namespace protobuf_qpb_2fqpb_2eproto
namespace qpb {
class Ipv4AddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ipv4Address>
      _instance;
} _Ipv4Address_default_instance_;
class Ipv6AddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ipv6Address>
      _instance;
} _Ipv6Address_default_instance_;
class L3AddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<L3Address>
      _instance;
} _L3Address_default_instance_;
class L3PrefixDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<L3Prefix>
      _instance;
} _L3Prefix_default_instance_;
class IfIdentifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IfIdentifier>
      _instance;
} _IfIdentifier_default_instance_;
}  // namespace qpb
namespace protobuf_qpb_2fqpb_2eproto {
static void InitDefaultsIpv4Address() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qpb::_Ipv4Address_default_instance_;
    new (ptr) ::qpb::Ipv4Address();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpb::Ipv4Address::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ipv4Address =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIpv4Address}, {}};

static void InitDefaultsIpv6Address() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qpb::_Ipv6Address_default_instance_;
    new (ptr) ::qpb::Ipv6Address();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpb::Ipv6Address::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ipv6Address =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIpv6Address}, {}};

static void InitDefaultsL3Address() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qpb::_L3Address_default_instance_;
    new (ptr) ::qpb::L3Address();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpb::L3Address::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_L3Address =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsL3Address}, {
      &protobuf_qpb_2fqpb_2eproto::scc_info_Ipv4Address.base,
      &protobuf_qpb_2fqpb_2eproto::scc_info_Ipv6Address.base,}};

static void InitDefaultsL3Prefix() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qpb::_L3Prefix_default_instance_;
    new (ptr) ::qpb::L3Prefix();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpb::L3Prefix::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_L3Prefix =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsL3Prefix}, {}};

static void InitDefaultsIfIdentifier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qpb::_IfIdentifier_default_instance_;
    new (ptr) ::qpb::IfIdentifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpb::IfIdentifier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IfIdentifier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIfIdentifier}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Ipv4Address.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ipv6Address.base);
  ::google::protobuf::internal::InitSCC(&scc_info_L3Address.base);
  ::google::protobuf::internal::InitSCC(&scc_info_L3Prefix.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IfIdentifier.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::Ipv4Address, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::Ipv4Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::Ipv4Address, value_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::Ipv6Address, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::Ipv6Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::Ipv6Address, bytes_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::L3Address, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::L3Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::L3Address, v4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::L3Address, v6_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::L3Prefix, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::L3Prefix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::L3Prefix, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::L3Prefix, bytes_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::IfIdentifier, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::IfIdentifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::IfIdentifier, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpb::IfIdentifier, name_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::qpb::Ipv4Address)},
  { 7, 13, sizeof(::qpb::Ipv6Address)},
  { 14, 21, sizeof(::qpb::L3Address)},
  { 23, 30, sizeof(::qpb::L3Prefix)},
  { 32, 39, sizeof(::qpb::IfIdentifier)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpb::_Ipv4Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpb::_Ipv6Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpb::_L3Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpb::_L3Prefix_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpb::_IfIdentifier_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "qpb/qpb.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rqpb/qpb.proto\022\003qpb\"\034\n\013Ipv4Address\022\r\n\005v"
      "alue\030\001 \002(\007\"\034\n\013Ipv6Address\022\r\n\005bytes\030\001 \002(\014"
      "\"G\n\tL3Address\022\034\n\002v4\030\001 \001(\0132\020.qpb.Ipv4Addr"
      "ess\022\034\n\002v6\030\002 \001(\0132\020.qpb.Ipv6Address\")\n\010L3P"
      "refix\022\016\n\006length\030\001 \002(\r\022\r\n\005bytes\030\002 \002(\014\"+\n\014"
      "IfIdentifier\022\r\n\005index\030\001 \001(\r\022\014\n\004name\030\002 \001("
      "\t*3\n\rAddressFamily\022\016\n\nUNKNOWN_AF\020\000\022\010\n\004IP"
      "V4\020\001\022\010\n\004IPV6\020\002*\?\n\020SubAddressFamily\022\017\n\013UN"
      "KNOWN_SAF\020\000\022\013\n\007UNICAST\020\001\022\r\n\tMULTICAST\020\002*"
      "\213\001\n\010Protocol\022\021\n\rUNKNOWN_PROTO\020\000\022\t\n\005LOCAL"
      "\020\001\022\r\n\tCONNECTED\020\002\022\n\n\006KERNEL\020\003\022\n\n\006STATIC\020"
      "\004\022\007\n\003RIP\020\005\022\t\n\005RIPNG\020\006\022\010\n\004OSPF\020\007\022\010\n\004ISIS\020"
      "\010\022\007\n\003BGP\020\t\022\t\n\005OTHER\020\n"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 501);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "qpb/qpb.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_qpb_2fqpb_2eproto
namespace qpb {
const ::google::protobuf::EnumDescriptor* AddressFamily_descriptor() {
  protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qpb_2fqpb_2eproto::file_level_enum_descriptors[0];
}
bool AddressFamily_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SubAddressFamily_descriptor() {
  protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qpb_2fqpb_2eproto::file_level_enum_descriptors[1];
}
bool SubAddressFamily_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Protocol_descriptor() {
  protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qpb_2fqpb_2eproto::file_level_enum_descriptors[2];
}
bool Protocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Ipv4Address::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ipv4Address::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ipv4Address::Ipv4Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qpb_2fqpb_2eproto::scc_info_Ipv4Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpb.Ipv4Address)
}
Ipv4Address::Ipv4Address(const Ipv4Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:qpb.Ipv4Address)
}

void Ipv4Address::SharedCtor() {
  value_ = 0u;
}

Ipv4Address::~Ipv4Address() {
  // @@protoc_insertion_point(destructor:qpb.Ipv4Address)
  SharedDtor();
}

void Ipv4Address::SharedDtor() {
}

void Ipv4Address::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ipv4Address::descriptor() {
  ::protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpb_2fqpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ipv4Address& Ipv4Address::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qpb_2fqpb_2eproto::scc_info_Ipv4Address.base);
  return *internal_default_instance();
}


void Ipv4Address::Clear() {
// @@protoc_insertion_point(message_clear_start:qpb.Ipv4Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ipv4Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpb.Ipv4Address)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpb.Ipv4Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpb.Ipv4Address)
  return false;
#undef DO_
}

void Ipv4Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpb.Ipv4Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qpb.Ipv4Address)
}

::google::protobuf::uint8* Ipv4Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpb.Ipv4Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpb.Ipv4Address)
  return target;
}

size_t Ipv4Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpb.Ipv4Address)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required fixed32 value = 1;
  if (has_value()) {
    total_size += 1 + 4;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ipv4Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpb.Ipv4Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Ipv4Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ipv4Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpb.Ipv4Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpb.Ipv4Address)
    MergeFrom(*source);
  }
}

void Ipv4Address::MergeFrom(const Ipv4Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpb.Ipv4Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_value(from.value());
  }
}

void Ipv4Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpb.Ipv4Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ipv4Address::CopyFrom(const Ipv4Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpb.Ipv4Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ipv4Address::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Ipv4Address::Swap(Ipv4Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ipv4Address::InternalSwap(Ipv4Address* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ipv4Address::GetMetadata() const {
  protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpb_2fqpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ipv6Address::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ipv6Address::kBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ipv6Address::Ipv6Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qpb_2fqpb_2eproto::scc_info_Ipv6Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpb.Ipv6Address)
}
Ipv6Address::Ipv6Address(const Ipv6Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bytes()) {
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  // @@protoc_insertion_point(copy_constructor:qpb.Ipv6Address)
}

void Ipv6Address::SharedCtor() {
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Ipv6Address::~Ipv6Address() {
  // @@protoc_insertion_point(destructor:qpb.Ipv6Address)
  SharedDtor();
}

void Ipv6Address::SharedDtor() {
  bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Ipv6Address::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ipv6Address::descriptor() {
  ::protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpb_2fqpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ipv6Address& Ipv6Address::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qpb_2fqpb_2eproto::scc_info_Ipv6Address.base);
  return *internal_default_instance();
}


void Ipv6Address::Clear() {
// @@protoc_insertion_point(message_clear_start:qpb.Ipv6Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    bytes_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ipv6Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpb.Ipv6Address)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes bytes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpb.Ipv6Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpb.Ipv6Address)
  return false;
#undef DO_
}

void Ipv6Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpb.Ipv6Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes bytes = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->bytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qpb.Ipv6Address)
}

::google::protobuf::uint8* Ipv6Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpb.Ipv6Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes bytes = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->bytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpb.Ipv6Address)
  return target;
}

size_t Ipv6Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpb.Ipv6Address)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes bytes = 1;
  if (has_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bytes());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ipv6Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpb.Ipv6Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Ipv6Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ipv6Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpb.Ipv6Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpb.Ipv6Address)
    MergeFrom(*source);
  }
}

void Ipv6Address::MergeFrom(const Ipv6Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpb.Ipv6Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bytes()) {
    set_has_bytes();
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
}

void Ipv6Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpb.Ipv6Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ipv6Address::CopyFrom(const Ipv6Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpb.Ipv6Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ipv6Address::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Ipv6Address::Swap(Ipv6Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ipv6Address::InternalSwap(Ipv6Address* other) {
  using std::swap;
  bytes_.Swap(&other->bytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ipv6Address::GetMetadata() const {
  protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpb_2fqpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void L3Address::InitAsDefaultInstance() {
  ::qpb::_L3Address_default_instance_._instance.get_mutable()->v4_ = const_cast< ::qpb::Ipv4Address*>(
      ::qpb::Ipv4Address::internal_default_instance());
  ::qpb::_L3Address_default_instance_._instance.get_mutable()->v6_ = const_cast< ::qpb::Ipv6Address*>(
      ::qpb::Ipv6Address::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int L3Address::kV4FieldNumber;
const int L3Address::kV6FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

L3Address::L3Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qpb_2fqpb_2eproto::scc_info_L3Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpb.L3Address)
}
L3Address::L3Address(const L3Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_v4()) {
    v4_ = new ::qpb::Ipv4Address(*from.v4_);
  } else {
    v4_ = NULL;
  }
  if (from.has_v6()) {
    v6_ = new ::qpb::Ipv6Address(*from.v6_);
  } else {
    v6_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:qpb.L3Address)
}

void L3Address::SharedCtor() {
  ::memset(&v4_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v6_) -
      reinterpret_cast<char*>(&v4_)) + sizeof(v6_));
}

L3Address::~L3Address() {
  // @@protoc_insertion_point(destructor:qpb.L3Address)
  SharedDtor();
}

void L3Address::SharedDtor() {
  if (this != internal_default_instance()) delete v4_;
  if (this != internal_default_instance()) delete v6_;
}

void L3Address::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* L3Address::descriptor() {
  ::protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpb_2fqpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const L3Address& L3Address::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qpb_2fqpb_2eproto::scc_info_L3Address.base);
  return *internal_default_instance();
}


void L3Address::Clear() {
// @@protoc_insertion_point(message_clear_start:qpb.L3Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(v4_ != NULL);
      v4_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(v6_ != NULL);
      v6_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool L3Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpb.L3Address)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .qpb.Ipv4Address v4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .qpb.Ipv6Address v6 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpb.L3Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpb.L3Address)
  return false;
#undef DO_
}

void L3Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpb.L3Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .qpb.Ipv4Address v4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_v4(), output);
  }

  // optional .qpb.Ipv6Address v6 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_v6(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qpb.L3Address)
}

::google::protobuf::uint8* L3Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpb.L3Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .qpb.Ipv4Address v4 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_v4(), deterministic, target);
  }

  // optional .qpb.Ipv6Address v6 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_v6(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpb.L3Address)
  return target;
}

size_t L3Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpb.L3Address)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .qpb.Ipv4Address v4 = 1;
    if (has_v4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *v4_);
    }

    // optional .qpb.Ipv6Address v6 = 2;
    if (has_v6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *v6_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void L3Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpb.L3Address)
  GOOGLE_DCHECK_NE(&from, this);
  const L3Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const L3Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpb.L3Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpb.L3Address)
    MergeFrom(*source);
  }
}

void L3Address::MergeFrom(const L3Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpb.L3Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_v4()->::qpb::Ipv4Address::MergeFrom(from.v4());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_v6()->::qpb::Ipv6Address::MergeFrom(from.v6());
    }
  }
}

void L3Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpb.L3Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void L3Address::CopyFrom(const L3Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpb.L3Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool L3Address::IsInitialized() const {
  if (has_v4()) {
    if (!this->v4_->IsInitialized()) return false;
  }
  if (has_v6()) {
    if (!this->v6_->IsInitialized()) return false;
  }
  return true;
}

void L3Address::Swap(L3Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void L3Address::InternalSwap(L3Address* other) {
  using std::swap;
  swap(v4_, other->v4_);
  swap(v6_, other->v6_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata L3Address::GetMetadata() const {
  protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpb_2fqpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void L3Prefix::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int L3Prefix::kLengthFieldNumber;
const int L3Prefix::kBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

L3Prefix::L3Prefix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qpb_2fqpb_2eproto::scc_info_L3Prefix.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpb.L3Prefix)
}
L3Prefix::L3Prefix(const L3Prefix& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bytes()) {
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  length_ = from.length_;
  // @@protoc_insertion_point(copy_constructor:qpb.L3Prefix)
}

void L3Prefix::SharedCtor() {
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  length_ = 0u;
}

L3Prefix::~L3Prefix() {
  // @@protoc_insertion_point(destructor:qpb.L3Prefix)
  SharedDtor();
}

void L3Prefix::SharedDtor() {
  bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void L3Prefix::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* L3Prefix::descriptor() {
  ::protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpb_2fqpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const L3Prefix& L3Prefix::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qpb_2fqpb_2eproto::scc_info_L3Prefix.base);
  return *internal_default_instance();
}


void L3Prefix::Clear() {
// @@protoc_insertion_point(message_clear_start:qpb.L3Prefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    bytes_.ClearNonDefaultToEmptyNoArena();
  }
  length_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool L3Prefix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpb.L3Prefix)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes bytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpb.L3Prefix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpb.L3Prefix)
  return false;
#undef DO_
}

void L3Prefix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpb.L3Prefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 length = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->length(), output);
  }

  // required bytes bytes = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->bytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qpb.L3Prefix)
}

::google::protobuf::uint8* L3Prefix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpb.L3Prefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 length = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->length(), target);
  }

  // required bytes bytes = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->bytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpb.L3Prefix)
  return target;
}

size_t L3Prefix::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:qpb.L3Prefix)
  size_t total_size = 0;

  if (has_bytes()) {
    // required bytes bytes = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bytes());
  }

  if (has_length()) {
    // required uint32 length = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->length());
  }

  return total_size;
}
size_t L3Prefix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpb.L3Prefix)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes bytes = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bytes());

    // required uint32 length = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->length());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void L3Prefix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpb.L3Prefix)
  GOOGLE_DCHECK_NE(&from, this);
  const L3Prefix* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const L3Prefix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpb.L3Prefix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpb.L3Prefix)
    MergeFrom(*source);
  }
}

void L3Prefix::MergeFrom(const L3Prefix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpb.L3Prefix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bytes();
      bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
    }
    if (cached_has_bits & 0x00000002u) {
      length_ = from.length_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void L3Prefix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpb.L3Prefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void L3Prefix::CopyFrom(const L3Prefix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpb.L3Prefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool L3Prefix::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void L3Prefix::Swap(L3Prefix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void L3Prefix::InternalSwap(L3Prefix* other) {
  using std::swap;
  bytes_.Swap(&other->bytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(length_, other->length_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata L3Prefix::GetMetadata() const {
  protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpb_2fqpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IfIdentifier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IfIdentifier::kIndexFieldNumber;
const int IfIdentifier::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IfIdentifier::IfIdentifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qpb_2fqpb_2eproto::scc_info_IfIdentifier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpb.IfIdentifier)
}
IfIdentifier::IfIdentifier(const IfIdentifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:qpb.IfIdentifier)
}

void IfIdentifier::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = 0u;
}

IfIdentifier::~IfIdentifier() {
  // @@protoc_insertion_point(destructor:qpb.IfIdentifier)
  SharedDtor();
}

void IfIdentifier::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IfIdentifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IfIdentifier::descriptor() {
  ::protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpb_2fqpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IfIdentifier& IfIdentifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qpb_2fqpb_2eproto::scc_info_IfIdentifier.base);
  return *internal_default_instance();
}


void IfIdentifier::Clear() {
// @@protoc_insertion_point(message_clear_start:qpb.IfIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IfIdentifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpb.IfIdentifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "qpb.IfIdentifier.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpb.IfIdentifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpb.IfIdentifier)
  return false;
#undef DO_
}

void IfIdentifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpb.IfIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 index = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qpb.IfIdentifier.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qpb.IfIdentifier)
}

::google::protobuf::uint8* IfIdentifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpb.IfIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qpb.IfIdentifier.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpb.IfIdentifier)
  return target;
}

size_t IfIdentifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpb.IfIdentifier)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IfIdentifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpb.IfIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  const IfIdentifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IfIdentifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpb.IfIdentifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpb.IfIdentifier)
    MergeFrom(*source);
  }
}

void IfIdentifier::MergeFrom(const IfIdentifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpb.IfIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IfIdentifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpb.IfIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IfIdentifier::CopyFrom(const IfIdentifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpb.IfIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IfIdentifier::IsInitialized() const {
  return true;
}

void IfIdentifier::Swap(IfIdentifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IfIdentifier::InternalSwap(IfIdentifier* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IfIdentifier::GetMetadata() const {
  protobuf_qpb_2fqpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpb_2fqpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace qpb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qpb::Ipv4Address* Arena::CreateMaybeMessage< ::qpb::Ipv4Address >(Arena* arena) {
  return Arena::CreateInternal< ::qpb::Ipv4Address >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qpb::Ipv6Address* Arena::CreateMaybeMessage< ::qpb::Ipv6Address >(Arena* arena) {
  return Arena::CreateInternal< ::qpb::Ipv6Address >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qpb::L3Address* Arena::CreateMaybeMessage< ::qpb::L3Address >(Arena* arena) {
  return Arena::CreateInternal< ::qpb::L3Address >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qpb::L3Prefix* Arena::CreateMaybeMessage< ::qpb::L3Prefix >(Arena* arena) {
  return Arena::CreateInternal< ::qpb::L3Prefix >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qpb::IfIdentifier* Arena::CreateMaybeMessage< ::qpb::IfIdentifier >(Arena* arena) {
  return Arena::CreateInternal< ::qpb::IfIdentifier >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
